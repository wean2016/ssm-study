<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ClassMapper">

    <!--
        根据班级 id 查询班级信息（带老师的信息）
        1. 联表查询
        2. 执行两次查询
    -->
    <!--
        方式一：嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集
                封装联表查询的数据(去除重复的数据)
        select * from class c, teacher t where c.teacher_id=t.t_id and  c.c_id=1
    -->
    <select id="getClass" parameterType="int" resultMap="getCLassResultMap">
        select * from class c, teacher t where c.teacher_id=t.t_id and  c.c_id=#{id}
    </select>
    
    <resultMap id="getCLassResultMap" type="CLasses">
        <id property="id" column="c_id"/>
        <result property="name" column="c_name"/>
        <!--使用 association 标签定义嵌套， properties 是外层 bean 中的属性名， javaType 是要这个属性名要嵌套进来的类 -->
        <association property="teacher" javaType="Teacher">
            <id property="id" column="t_id"/>
            <result property="name" column="t_name"/>
        </association>
    </resultMap>

    <!-- 
        方式二：嵌套查询：通过执行另外一个SQL映射语句来返回预期的复杂类型
	    SELECT * FROM class WHERE c_id=1;
	    SELECT * FROM teacher WHERE t_id=1   //1 是上一个查询得到的teacher_id的值
    -->
    <select id="getClass2" parameterType="int" resultMap="getCLass2ResultMap">
        SELECT * FROM class WHERE c_id=#{id}
    </select>
    
    <select id="getTeacher" parameterType="int" resultType="Teacher">
        SELECT t_id id, t_name name FROM teacher WHERE t_id=#{id}
    </select>

    <resultMap id="getCLass2ResultMap" type="Classes">
        <id property="id" column="c_id"/>
        <result property="name" column="c_name"/>
        <association property="teacher" column="teacher_id" select="getTeacher"></association>
    </resultMap>


</mapper>